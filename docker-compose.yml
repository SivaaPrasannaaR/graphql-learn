version: "3.8"
services:
  mongo:
    image: mongo:4.2
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ecommerce-network

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - ecommerce-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - ecommerce-network

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "4001:4001"
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - ecommerce-network

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "4002:4002"
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - ecommerce-network

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "4000:4000"
    depends_on:
      - user-service
      - product-service
    restart: on-failure
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mongo-data:
